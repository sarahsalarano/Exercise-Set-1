
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)

#Exercise 6

#10.3.3

#1

ggplot(diamonds, aes(x = x)) +
  geom_histogram() +
  coord_cartesian(ylim = c(0,25))

ggplot(diamonds, aes(x = y)) +
  geom_histogram() +
  coord_cartesian(ylim = c(0,25))

ggplot(diamonds, aes(x = z)) +
  geom_histogram() +
  coord_cartesian(ylim = c(0,25))

#As the text suggests, there are outliers in this data that are likely due to
#data coding errors.  ~20 z-values are 0, along with 7 values of x- and y-values,
#which is impossible.  There are also rather large diamonds (> 30mm).

#Additionally, the x- and y-values tend to all fall between 3mm and 11mm, while
#the z-values are consistently smaller and top out around 8mm.  This suggests that
#x- and y-values are the length and width (assuming mostly circular tops),
#while z-values are the depth.

#2

ggplot(diamonds, aes(x = price, fill = cut)) +
  geom_histogram(binwidth = 10) +
  coord_cartesian(xlim = c(1000, 2000))

#Price seems to make sense: there are more diamonds in an "affordable" price range,
#and the quantity decreases as price increases.  This also appears consistent across
#cut type. However, there is a peculiar gap at $1500.
  
#3

ggplot(diamonds, aes(x = carat)) +
  geom_histogram(binwidth = 0.01) + 
  coord_cartesian(xlim = c(0.97, 1.03))

ninenine <- diamonds |>
  filter(carat == 0.99)

onecarat <- diamonds |>
  filter(carat == 1)

#There are 23 diamonds that are 0.99 carats, but there are 1558 diamonds that are
#1 carat.  This may be due to sales and pricing rules that prohibit rounding up and
#guarantee a significantly higher price for diamonds that are greater than one carat,
#thereby disincentivizing jewelers from having diamonds that are slightly less than 1 carat

#4

ggplot(diamonds, aes(x = z)) +
  geom_histogram() +
  coord_cartesian(xlim = c(2.3, 5.5))

#With binwidth unset, it appears that the default attempts to keep an arbitrary number
#of bins, though it is somewhat unclear as to why it selects a certain number.  If we
#zoom in and try to cut off a bin halfway, this is permitted and the bins do not adjust

#1

#NA values are removed and not plotted for both bar plots and histograms.  However, 
#the overall count is reduced for the category with bar plots, but for histograms
#there is simply a gap.  As a result, bar plots may appear to have fewer datapoints
#than would otherwise be expected.

#2

#mean and sum treat do not work (rather, outputs NA) if there are NA values in the vector,
#so including na.rm = TRUE removes those values and allows the operation to examine
#the remaining numeric values.

#3

nycflights13::flights |> 
  mutate(
    cancelled = is.na(dep_time),
    sched_hour = sched_dep_time %/% 100,
    sched_min = sched_dep_time %% 100,
    sched_dep_time = sched_hour + (sched_min / 60)
  ) |> 
  ggplot(aes(x = sched_dep_time, y =..density..)) + 
  geom_freqpoly(aes(color = cancelled), binwidth = 1/4) +
  facet_wrap(~cancelled)

#When plotting with the y-axis set to density and facet wrapping based on whether
#the flights was cancelled, it appears that there is a greater frequency of cancelled
#flights in the evenings, while non-cancelled flights occur steadily throughout the day,
#with a slight dip around noon.

#11.2.1

#1

ggplot(mpg |>
         filter(class != "2seater"), 
       aes(x = displ, y = hwy, color = drv)) +
  geom_point(position = "jitter") +
  geom_smooth(aes(linetype = drv), size = 2, se = FALSE) +
  labs(
    x = "Engine displacement (L)",
    y = "Highway fuel economy (mpg)",
   # color = "Car Type",
    title = "Fuel Efficiency Generally Decreases With Engine Size",
    subtitle = "This trend is consistent across various drive types",
    caption = "Two seaters (sports cars) are excluded as outliers because of their light weight") +
  scale_color_manual(name = "Type of Drive Train",
                     labels = c("4 Wheel Drive", "Front Wheel Drive", "Rear Wheel Drive"),
                     values = c("red", "purple", "blue")) +
  scale_linetype_manual(name = "Type of Drive Train",
                        labels = c("4 Wheel Drive", "Front Wheel Drive", "Rear Wheel Drive"),
                        values = c("solid", "dashed", "longdash"))
  
#2

ggplot(mpg, aes(x = cty, y = hwy, color = drv, shape = drv)) +
  geom_point(size = 3) +
  labs(
    x = "City MPG",
    y = "Highway MPG") +
  guides(color = guide_legend(title = "Type of drive train"),
         shape = guide_legend(title = "Type of drive train"))

#3

replac <- read.csv("decapdatamar24.csv")

ggplot(replac2, aes(x = ldrlevelfac, fill = polity2fac)) +
  geom_bar() +
  labs(title = "Figure 1: Leadership Decapitation Attempts by Seniority and Polity",
       x = "Leadership Level",
       y = "Count",
       subtitle = "Decapitation targets are mostly autocratic leaders and heads of state") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5)) +
  scale_fill_manual(name = "Regime Type",
                     labels = c("Autocratic", "Anocratic", "Democratic"),
                     values = c("orange", "purple", "blue"))


#11.3.1

#1



#2



#3



#4



#5



#11.4.6

#1



#2



#3



#4

