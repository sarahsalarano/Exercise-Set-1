
library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)

#9.2.1

#Question 1

ggplot(mpg, aes(x = hwy, y = displ)) +
  geom_point(color = "pink", shape = 17)

#Question 2

#When placed within the aesthetics under geom_point, color is searching for a variable,
#so color should be placed outside of the aesthetics within geom_point instead, like so:

ggplot(mpg) +
  geom_point(aes(x = displ, y = hwy), color = "blue")

#Question 3

#The stroke aesthetic lets you modify the width of the border for shapes 21-25.

ggplot(mpg, aes(x = hwy, y = displ)) +
  geom_point(color = "pink", shape = 24, stroke = 3)

#Question 4

ggplot(mpg, aes(x = hwy, y = displ, color = displ < 5)) +
  geom_point()

#when mapped within the global, inserting a logical command for color is an acceptable command,
#but the result creates a logical value of either TRUE or FALSE and the color is based on these
#two values

#9.3.1

#Question 1

#The geom for a line chart is geom_smooth
#The geom for a boxplot is geom_boxplot
#The geom for a histogram is geom_histogram
#The geom for an area chart is geom_area

#Question 2

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(color = drv), show.legend = FALSE)

#The default (without show.legend = FALSE), provides a legend on the plot's right side
#This command removes that legend, which may be useful for removing clutter or information
#that may already be obvious based on the plot

#Question 3

ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(aes(color = drv), se = FALSE)

#The 'se' command is the standard errors command.  Setting this to FALSE removes
#the gray confidence intervals that surround each of the lines

#Question 4

#Top left
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(size = 5) +
  geom_smooth(size = 2, se = FALSE)

#Top right
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(size = 5) +
  geom_smooth(aes(group = drv), size = 2, se = FALSE)

#Middle left
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(size = 5) +
  geom_smooth(aes(group = drv), size = 2, se = FALSE)

#Middle right
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(size = 5) +
  geom_smooth(color = "blue", size = 2, se = FALSE)

#Bottom left
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
  geom_point(size = 5) +
  geom_smooth(aes(group = drv, linetype = drv), color = "blue", size = 2, se = FALSE)

#Bottom right
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(fill = drv), color = "white", shape = 21, stroke = 5, size = 5)

#9.4.1

#Question 1

#Here's an example of faceting with the continuous variable 'hwy'

ggplot(mpg, aes(x = displ, y = year)) + 
geom_point() +
facet_wrap(~hwy)

#This yields a facet for each subset of the continuous variable.


#Question 2

#Empty facets indicate that no observations fall in that category 
#(e.g. there are no rear-wheel drives with 4 cylinders)
#The resulting plot indcates if  categories have observations or not with a single point

#Question 3

ggplot(mpg) + 
  geom_point(aes(x = displ, y = hwy)) +
  facet_grid(drv ~ .)

#The . means drv will not facet across columns

ggplot(mpg) + 
  geom_point(aes(x = displ, y = hwy)) +
  facet_grid(. ~ cyl)

#The . means cyl will not facet across rows

#Question 4

#The advantage to faceting is that each category is isolated
#The disadvantage to faceting is that it's more difficult to compare different categories because the data points don't overlap
#Using color allows us to plot different categories distinctly on the same plot, which can make comparison easier
#With a larger data set, the different colored points may still overlap significantly and therefore skew our analysis

#Question 5

#nrow determines the number of rows
#ncol determines the number of columns
#Other options that control the layout include: labeller, as.table, switch, dir, axes, and axis.labels
#facet_grid() has rows and cols

#Question 6

ggplot(mpg, aes(x = displ)) + 
  geom_histogram() + 
  facet_grid(drv ~ .)

#This first code is much easier to read
#The displ variable is better on the x-axis, and therefore as the columns, because all types of drive share the same displ value range

#Question 7

ggplot(mpg) + 
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(drv ~ .)

#When using facet wrap, the positions switched (rows became columns and columns became rows)

#9.5.1

#Question 1



#Question 2



#Question 3



#Question 4



#Question 5


